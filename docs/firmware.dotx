// Copyright (c) 2013, Henrik Brix Andersen <henrik@brixandersen.dk>
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice, this
//   list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice, this
//   list of conditions and the following disclaimer in the documentation and/or
//   other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
// ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#include "common.dotx"

// States
#define S_INIT_GYR   "Initialize\nGyroscope"
#define S_INIT_ACC   "Initialize\nAccelerometer"
#define S_INIT_MAG   "Initialize\nMagnetometer"
#define S_IDLE       "Idle"
#define S_RD_GYR     "Read\nGyroscope"
#define S_RD_ACC     "Read\nAccelerometer"
#define S_RD_MAG     "Read\nMagnetometer"

digraph "IMUco Firmware State Diagram" {
	// States
	start();
	state(S_INIT_GYR);
	state(S_INIT_ACC);
	state(S_INIT_MAG);
	state(S_IDLE);
	state(S_RD_GYR);
	state(S_RD_ACC);
	state(S_RD_MAG);
	//final();

	// Initialize gyroscope
	trans(S_START, S_INIT_GYR, "POWER_ON");
	trans(S_INIT_GYR, S_INIT_GYR, "I2C_IRQ");

	// Initialize accelerometer
	trans(S_INIT_GYR, S_INIT_ACC, "GYR_INIT_CB");
	trans(S_INIT_ACC, S_INIT_ACC, "I2C_IRQ");

	// Initialize magnetometer
	trans(S_INIT_ACC, S_INIT_MAG, "GYR_INIT_CB");
	trans(S_INIT_MAG, S_INIT_MAG, "I2C_IRQ");

	// Idle
	trans(S_INIT_MAG, S_IDLE, "MAG_INIT_CB");

	// Read gyroscope
	trans(S_IDLE, S_RD_GYR, "GYRO_DATA_IRQ");
	trans(S_RD_GYR, S_IDLE, "GYRO_DATA_CB");
	trans(S_RD_GYR, S_RD_GYR, "I2C_IRQ");

	// Read accelerometer
	trans(S_IDLE, S_RD_ACC, "ACCEL_DATA_IRQ");
	trans(S_RD_ACC, S_IDLE, "ACCEL_DATA_CB");
	trans(S_RD_ACC, S_RD_ACC, "I2C_IRQ");

	// Read magnetometer
	trans(S_IDLE, S_RD_MAG, "MAGN_DATA_IRQ");
	trans(S_RD_MAG, S_IDLE, "MAGN_DATA_CB");
	trans(S_RD_MAG, S_RD_MAG, "I2C_IRQ");
}
